{"ast":null,"code":"var _jsxFileName = \"/Users/xinyilin/Documents/Git Projects/react_portfolio/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseItem from \"./ExpenseItem\";\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState('2021');\n\n  const handleFilterChange = selectedYear => {\n    setSelectedYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 26\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: selectedYear,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Expenses found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"CYLCEAxSTUihL/Ue2cbWRMebQjA=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/xinyilin/Documents/Git Projects/react_portfolio/src/components/Expenses/Expenses.js"],"names":["useState","Card","ExpenseFilter","ExpenseItem","Expenses","props","selectedYear","setSelectedYear","handleFilterChange","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id","expenseContent"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,kBAAkB,GAAGF,YAAY,IAAI;AACzCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMG,gBAAgB,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,YAAjD;AACD,GAFwB,CAAzB;;AAIA,MAAIU,eAAe,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvB;;AACA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAqBN,OAAO,iBAC5C,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAOD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEf,YAAzB;AAAuC,MAAA,cAAc,EAAEE;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpC,EAGGR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACCR,gBAAgB,CAACS,GAAjB,CAAqBN,OAAO,iBAC1B,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADF,CAJJ,EAYGC,cAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CArCD;;GAAMlB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseItem from \"./ExpenseItem\";\nimport './Expenses.css'\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState('2021');\n  const handleFilterChange = selectedYear => {\n    setSelectedYear(selectedYear);\n  }\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n\n  let expensesContent =  <p>No Expenses found.</p>;\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}/>\n    ))\n  }\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter selected={selectedYear} onFilterChange={handleFilterChange} />\n      {filteredExpenses.length === 0 && <p>No Expenses found.</p>}\n      {filteredExpenses.length > 0 && \n        filteredExpenses.map(expense => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}/>\n        )\n      )}\n      {expenseContent}\n    </Card>\n  )\n};\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}